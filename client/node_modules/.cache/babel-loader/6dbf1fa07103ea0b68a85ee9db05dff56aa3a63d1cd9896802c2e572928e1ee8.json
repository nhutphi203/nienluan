{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\nienluan_khac\\\\client\\\\src\\\\Revenue.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Revenue = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/manager/revenue\").then(response => {\n      console.log(\"API Response:\", response.data);\n      setData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(\"vi-VN\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\"\n    }).format(date);\n  };\n  const formatCurrency = value => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\"\n    }).format(value);\n  };\n  const sanitizedData = data.map(item => ({\n    ...item,\n    date: formatDate(item.date),\n    revenue: item.revenue || 0\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: sanitizedData,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        tickFormatter: formatCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: value => formatCurrency(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"revenue\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Revenue, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Revenue;\nexport default Revenue;\nvar _c;\n$RefreshReg$(_c, \"Revenue\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Revenue","_s","data","setData","get","then","response","console","log","catch","error","formatDate","dateString","date","Date","Intl","DateTimeFormat","day","month","year","format","formatCurrency","value","NumberFormat","style","currency","sanitizedData","map","item","revenue","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","tickFormatter","formatter","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/nienluan_khac/client/src/Revenue.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst Revenue = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/manager/revenue\")\r\n            .then((response) => {\r\n                console.log(\"API Response:\", response.data);\r\n                setData(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching data:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return new Intl.DateTimeFormat(\"vi-VN\", { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" }).format(date);\r\n    };\r\n\r\n    const formatCurrency = (value) => {\r\n        return new Intl.NumberFormat(\"vi-VN\", { style: \"currency\", currency: \"VND\" }).format(value);\r\n    };\r\n\r\n    const sanitizedData = data.map(item => ({\r\n        ...item,\r\n        date: formatDate(item.date),\r\n        revenue: item.revenue || 0\r\n    }));\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={sanitizedData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis tickFormatter={formatCurrency} />\r\n                <Tooltip formatter={(value) => formatCurrency(value)} />\r\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#8884d8\" />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default Revenue;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACc,GAAG,CAAC,uCAAuC,CAAC,CAC7CC,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAACJ,IAAI,CAAC;MAC3CC,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAIC,UAAU,IAAK;IAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAO,IAAIG,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC,CAACC,MAAM,CAACP,IAAI,CAAC;EAC/G,CAAC;EAED,MAAMQ,cAAc,GAAIC,KAAK,IAAK;IAC9B,OAAO,IAAIP,IAAI,CAACQ,YAAY,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC,CAACL,MAAM,CAACE,KAAK,CAAC;EAC/F,CAAC;EAED,MAAMI,aAAa,GAAGxB,IAAI,CAACyB,GAAG,CAACC,IAAI,KAAK;IACpC,GAAGA,IAAI;IACPf,IAAI,EAAEF,UAAU,CAACiB,IAAI,CAACf,IAAI,CAAC;IAC3BgB,OAAO,EAAED,IAAI,CAACC,OAAO,IAAI;EAC7B,CAAC,CAAC,CAAC;EAEH,oBACI9B,OAAA,CAACF,mBAAmB;IAACiC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC1CjC,OAAA,CAACR,SAAS;MAACW,IAAI,EAAEwB,aAAc;MAAAM,QAAA,gBAC3BjC,OAAA,CAACJ,aAAa;QAACsC,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCtC,OAAA,CAACN,KAAK;QAAC6C,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBtC,OAAA,CAACL,KAAK;QAAC6C,aAAa,EAAElB;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCtC,OAAA,CAACH,OAAO;QAAC4C,SAAS,EAAGlB,KAAK,IAAKD,cAAc,CAACC,KAAK;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxDtC,OAAA,CAACP,IAAI;QAACiD,IAAI,EAAC,UAAU;QAACH,OAAO,EAAC,SAAS;QAACI,MAAM,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE9B,CAAC;AAACpC,EAAA,CAxCID,OAAO;AAAA2C,EAAA,GAAP3C,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}