{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\nienluan_khac\\\\client\\\\src\\\\GroupContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// GroupContext.js\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n// Tạo context với giá trị mặc định là null hoặc một giá trị thích hợp\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupContext = /*#__PURE__*/createContext(null);\n\n// Tạo một custom hook để sử dụng context này\nexport const useGroup = () => {\n  _s();\n  return useContext(GroupContext);\n};\n\n// Tạo provider để cung cấp context cho các component con\n_s(useGroup, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const GroupProvider = ({\n  children\n}) => {\n  _s2();\n  const [groupData, setGroupData] = useState(null);\n\n  // Kiểm tra và lấy dữ liệu từ localStorage khi component được mount\n  useEffect(() => {\n    const savedGroupData = JSON.parse(localStorage.getItem('groupData'));\n    if (savedGroupData) {\n      setGroupData(savedGroupData); // Cập nhật groupData từ localStorage\n    }\n  }, []);\n\n  // Cập nhật dữ liệu nhóm và lưu vào localStorage\n  const updateGroupData = newGroupData => {\n    setGroupData(newGroupData);\n    localStorage.setItem('groupData', JSON.stringify(newGroupData)); // Lưu vào localStorage\n  };\n  GroupProvider.propTypes = {\n    children: PropTypes.node.isRequired\n  };\n  return /*#__PURE__*/_jsxDEV(GroupContext.Provider, {\n    value: {\n      groupData,\n      updateGroupData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s2(GroupProvider, \"RGesA2KGQWPRdTP5RfnV5ymMG2U=\");\n_c = GroupProvider;\nvar _c;\n$RefreshReg$(_c, \"GroupProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","PropTypes","jsxDEV","_jsxDEV","GroupContext","useGroup","_s","GroupProvider","children","_s2","groupData","setGroupData","savedGroupData","JSON","parse","localStorage","getItem","updateGroupData","newGroupData","setItem","stringify","propTypes","node","isRequired","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/nienluan_khac/client/src/GroupContext.jsx"],"sourcesContent":["// GroupContext.js\r\nimport { createContext, useState, useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Tạo context với giá trị mặc định là null hoặc một giá trị thích hợp\r\nconst GroupContext = createContext(null);\r\n\r\n// Tạo một custom hook để sử dụng context này\r\nexport const useGroup = () => {\r\n    return useContext(GroupContext);\r\n};\r\n\r\n// Tạo provider để cung cấp context cho các component con\r\nexport const GroupProvider = ({ children }) => {\r\n    const [groupData, setGroupData] = useState(null);\r\n\r\n    // Kiểm tra và lấy dữ liệu từ localStorage khi component được mount\r\n    useEffect(() => {\r\n        const savedGroupData = JSON.parse(localStorage.getItem('groupData'));\r\n        if (savedGroupData) {\r\n            setGroupData(savedGroupData); // Cập nhật groupData từ localStorage\r\n        }\r\n    }, []);\r\n\r\n    // Cập nhật dữ liệu nhóm và lưu vào localStorage\r\n    const updateGroupData = (newGroupData) => {\r\n        setGroupData(newGroupData);\r\n        localStorage.setItem('groupData', JSON.stringify(newGroupData)); // Lưu vào localStorage\r\n    };\r\n\r\n    GroupProvider.propTypes = {\r\n        children: PropTypes.node.isRequired,\r\n    };\r\n\r\n    return (\r\n        <GroupContext.Provider value={{ groupData, updateGroupData }}>\r\n            {children}\r\n        </GroupContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACtE,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGP,aAAa,CAAC,IAAI,CAAC;;AAExC;AACA,OAAO,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,OAAOP,UAAU,CAACK,YAAY,CAAC;AACnC,CAAC;;AAED;AAAAE,EAAA,CAJaD,QAAQ;AAKrB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAE,SAAS,CAAC,MAAM;IACZ,MAAMY,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACpE,IAAIJ,cAAc,EAAE;MAChBD,YAAY,CAACC,cAAc,CAAC,CAAC,CAAC;IAClC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,eAAe,GAAIC,YAAY,IAAK;IACtCP,YAAY,CAACO,YAAY,CAAC;IAC1BH,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACO,SAAS,CAACF,YAAY,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC;EAEDX,aAAa,CAACc,SAAS,GAAG;IACtBb,QAAQ,EAAEP,SAAS,CAACqB,IAAI,CAACC;EAC7B,CAAC;EAED,oBACIpB,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEf,SAAS;MAAEO;IAAgB,CAAE;IAAAT,QAAA,EACxDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACpB,GAAA,CA1BWF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}