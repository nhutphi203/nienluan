{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\nienluan_khac\\\\client\\\\src\\\\Revenue.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Revenue = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/manager/revenue\").then(response => {\n      const formattedData = [{\n        date: new Date().toISOString().split(\"T\")[0],\n        revenue: parseFloat(response.data.total_revenue)\n      }];\n      setData(formattedData);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"revenue\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Revenue, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Revenue;\nexport default Revenue;\nvar _c;\n$RefreshReg$(_c, \"Revenue\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Revenue","_s","data","setData","get","then","response","formattedData","date","Date","toISOString","split","revenue","parseFloat","total_revenue","catch","error","console","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/nienluan_khac/client/src/Revenue.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst Revenue = () => {\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/manager/revenue\")\r\n            .then((response) => {\r\n                const formattedData = [\r\n                    { date: new Date().toISOString().split(\"T\")[0], revenue: parseFloat(response.data.total_revenue) }\r\n                ];\r\n                setData(formattedData);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching data:\", error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={data}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#8884d8\" />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default Revenue;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACc,GAAG,CAAC,uCAAuC,CAAC,CAC7CC,IAAI,CAAEC,QAAQ,IAAK;MAChB,MAAMC,aAAa,GAAG,CAClB;QAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAAEC,OAAO,EAAEC,UAAU,CAACP,QAAQ,CAACJ,IAAI,CAACY,aAAa;MAAE,CAAC,CACrG;MACDX,OAAO,CAACI,aAAa,CAAC;IAC1B,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIjB,OAAA,CAACF,mBAAmB;IAACqB,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC1CrB,OAAA,CAACR,SAAS;MAACW,IAAI,EAAEA,IAAK;MAAAkB,QAAA,gBAClBrB,OAAA,CAACJ,aAAa;QAAC0B,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC1B,OAAA,CAACN,KAAK;QAACiC,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxB1B,OAAA,CAACL,KAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT1B,OAAA,CAACH,OAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX1B,OAAA,CAACP,IAAI;QAACmC,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,SAAS;QAACE,MAAM,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE9B,CAAC;AAACxB,EAAA,CA3BID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}