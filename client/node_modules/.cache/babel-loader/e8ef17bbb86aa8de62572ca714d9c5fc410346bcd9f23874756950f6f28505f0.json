{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\nienluan_khac\\\\client\\\\src\\\\Payments.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payments = ({\n  studentId\n}) => {\n  _s();\n  const [fees, setFees] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/student/fees/${studentId}`).then(response => {\n      setFees(response.data);\n      setLoading(false);\n    }).catch(() => {\n      setError(\"Lỗi khi lấy thông tin học phí!\");\n      setLoading(false);\n    });\n  }, [studentId]);\n  const handlePayment = async () => {\n    try {\n      await axios.post(\"http://localhost:5000/student/pay\", {\n        studentId\n      });\n      alert(\"Thanh toán thành công!\");\n      window.location.reload();\n    } catch (err) {\n      alert(\"Thanh toán thất bại!\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0110ang t\\u1EA3i...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n\n  // Đường dẫn localhost cho QR Code\n  const paymentUrl = `http://localhost:5000/student/${studentId}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"H\\u1ECDc ph\\xED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0110\\xE3 thanh to\\xE1n: \", fees.already_pay, \" VND\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"C\\u1EA7n thanh to\\xE1n: \", fees.already_unpaid, \" VND\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), fees.already_unpaid > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Qu\\xE9t QR \\u0111\\u1EC3 thanh to\\xE1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: paymentUrl,\n        size: 256\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePayment,\n        children: \"X\\xE1c nh\\u1EADn \\u0111\\xE3 thanh to\\xE1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Payments, \"pe6VNV6eYCEe2CEgwlCAYpAIyBE=\");\n_c = Payments;\nexport default Payments;\nvar _c;\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"names":["useEffect","useState","QRCodeCanvas","axios","jsxDEV","_jsxDEV","Payments","studentId","_s","fees","setFees","loading","setLoading","error","setError","get","then","response","data","catch","handlePayment","post","alert","window","location","reload","err","children","fileName","_jsxFileName","lineNumber","columnNumber","paymentUrl","already_pay","already_unpaid","value","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/nienluan_khac/client/src/Payments.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\nimport axios from \"axios\";\r\n\r\nconst Payments = ({ studentId }) => {\r\n    const [fees, setFees] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/student/fees/${studentId}`)\r\n            .then(response => {\r\n                setFees(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setError(\"Lỗi khi lấy thông tin học phí!\");\r\n                setLoading(false);\r\n            });\r\n    }, [studentId]);\r\n\r\n    const handlePayment = async () => {\r\n        try {\r\n            await axios.post(\"http://localhost:5000/student/pay\", { studentId });\r\n            alert(\"Thanh toán thành công!\");\r\n            window.location.reload();\r\n        } catch (err) {\r\n            alert(\"Thanh toán thất bại!\");\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Đang tải...</p>;\r\n    if (error) return <p>{error}</p>;\r\n\r\n    // Đường dẫn localhost cho QR Code\r\n    const paymentUrl = `http://localhost:5000/student/${studentId}`;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Học phí</h2>\r\n            <p>Đã thanh toán: {fees.already_pay} VND</p>\r\n            <p>Cần thanh toán: {fees.already_unpaid} VND</p>\r\n\r\n            {fees.already_unpaid > 0 && (\r\n                <div>\r\n                    <h3>Quét QR để thanh toán</h3>\r\n                    <QRCodeCanvas value={paymentUrl} size={256} />\r\n                    <button onClick={handlePayment}>Xác nhận đã thanh toán</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,cAAc;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZG,KAAK,CAACY,GAAG,CAAC,sCAAsCR,SAAS,EAAE,CAAC,CACvDS,IAAI,CAACC,QAAQ,IAAI;MACdP,OAAO,CAACO,QAAQ,CAACC,IAAI,CAAC;MACtBN,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDO,KAAK,CAAC,MAAM;MACTL,QAAQ,CAAC,gCAAgC,CAAC;MAC1CF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMjB,KAAK,CAACkB,IAAI,CAAC,mCAAmC,EAAE;QAAEd;MAAU,CAAC,CAAC;MACpEe,KAAK,CAAC,wBAAwB,CAAC;MAC/BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVJ,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ,CAAC;EAED,IAAIX,OAAO,EAAE,oBAAON,OAAA;IAAAsB,QAAA,EAAG;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACtC,IAAIlB,KAAK,EAAE,oBAAOR,OAAA;IAAAsB,QAAA,EAAId;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;;EAEhC;EACA,MAAMC,UAAU,GAAG,iCAAiCzB,SAAS,EAAE;EAE/D,oBACIF,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB1B,OAAA;MAAAsB,QAAA,GAAG,4BAAe,EAAClB,IAAI,CAACwB,WAAW,EAAC,MAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5C1B,OAAA;MAAAsB,QAAA,GAAG,0BAAgB,EAAClB,IAAI,CAACyB,cAAc,EAAC,MAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAE/CtB,IAAI,CAACyB,cAAc,GAAG,CAAC,iBACpB7B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B1B,OAAA,CAACH,YAAY;QAACiC,KAAK,EAAEH,UAAW;QAACI,IAAI,EAAE;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9C1B,OAAA;QAAQgC,OAAO,EAAEjB,aAAc;QAAAO,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvB,EAAA,CAhDIF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}