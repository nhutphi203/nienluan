{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\nienluan_khac\\\\client\\\\src\\\\ChangePasswordModal.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePasswordModal = ({\n  closeModal\n}) => {\n  _s();\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Th√™m loading state\n  const [error, setError] = useState(\"\");\n  const handleChangePassword = async () => {\n    setError(\"\");\n    if (newPassword !== confirmPassword) {\n      setError(\"‚ùå M·∫≠t kh·∫©u m·ªõi kh√¥ng kh·ªõp!\");\n      return;\n    }\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (!storedUser) {\n      setError(\"‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng!\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/change-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: storedUser.id,\n          oldPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"‚úÖ ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!\");\n        closeModal();\n      } else {\n        setError(data.error || \"‚ùå C√≥ l·ªói x·∫£y ra!\");\n      }\n    } catch (error) {\n      setError(\"‚ùå L·ªói k·∫øt n·ªëi server!\");\n      console.error(\"L·ªói khi ƒë·ªïi m·∫≠t kh·∫©u:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"modal-title\",\n        children: \"\\uD83D\\uDD11 \\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u c\\u0169\",\n        value: oldPassword,\n        onChange: e => setOldPassword(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChangePassword,\n          disabled: loading,\n          className: \"confirm-button\",\n          children: loading ? \"ƒêang x·ª≠ l√Ω...\" : \"X√°c nh·∫≠n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"cancel-button\",\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ChangePasswordModal, \"PQpTIuk0N9uPXFNbwN4HQ8STWDQ=\");\n_c = ChangePasswordModal;\nexport default ChangePasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ChangePasswordModal\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ChangePasswordModal","closeModal","_s","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","error","setError","handleChangePassword","storedUser","JSON","parse","localStorage","getItem","response","fetch","method","headers","body","stringify","userId","id","data","json","ok","alert","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/nienluan_khac/client/src/ChangePasswordModal.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst ChangePasswordModal = ({ closeModal }) => {\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false); // Th√™m loading state\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleChangePassword = async () => {\r\n        setError(\"\");\r\n        if (newPassword !== confirmPassword) {\r\n            setError(\"‚ùå M·∫≠t kh·∫©u m·ªõi kh√¥ng kh·ªõp!\");\r\n            return;\r\n        }\r\n\r\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (!storedUser) {\r\n            setError(\"‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng!\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/change-password\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    userId: storedUser.id,\r\n                    oldPassword,\r\n                    newPassword,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                alert(\"‚úÖ ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!\");\r\n                closeModal();\r\n            } else {\r\n                setError(data.error || \"‚ùå C√≥ l·ªói x·∫£y ra!\");\r\n            }\r\n        } catch (error) {\r\n            setError(\"‚ùå L·ªói k·∫øt n·ªëi server!\");\r\n            console.error(\"L·ªói khi ƒë·ªïi m·∫≠t kh·∫©u:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-container\">\r\n                <h3 className=\"modal-title\">üîë ƒê·ªïi m·∫≠t kh·∫©u</h3>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"M·∫≠t kh·∫©u c≈©\"\r\n                    value={oldPassword}\r\n                    onChange={(e) => setOldPassword(e.target.value)}\r\n                    className=\"input-field\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"M·∫≠t kh·∫©u m·ªõi\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    className=\"input-field\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"X√°c nh·∫≠n m·∫≠t kh·∫©u\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    className=\"input-field\"\r\n                />\r\n\r\n                <div className=\"button-group\">\r\n                    <button onClick={handleChangePassword} disabled={loading} className=\"confirm-button\">\r\n                        {loading ? \"ƒêang x·ª≠ l√Ω...\" : \"X√°c nh·∫≠n\"}\r\n                    </button>\r\n                    <button onClick={closeModal} className=\"cancel-button\">\r\n                        H·ªßy\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePasswordModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}